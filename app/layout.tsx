import { ThemeProvider } from '@/components/theme-provider';
import { ContextProvider } from '@/lib/contextProvider';
import type { Metadata } from 'next';
import { SessionProvider } from 'next-auth/react';
import { Merriweather } from 'next/font/google';
import localFont from 'next/font/local';
import { ReactNode } from 'react';
import './globals.css';

const geistSans = localFont({
	src: './fonts/GeistVF.woff',
	variable: '--font-geist-sans',
	weight: '100 900',
});
const geistMono = localFont({
	src: './fonts/GeistMonoVF.woff',
	variable: '--font-geist-mono',
	weight: '100 900',
});

const merriweather = Merriweather({
	weight: ['300', '400', '700'],
	style: 'normal',
	subsets: ['latin'],
	variable: '--font-merriweather',
	display: 'swap',
});

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
};

interface LayoutProps {
	children: ReactNode;
	initialState: any; // The initial state passed from the server
}

export default function RootLayout({
	children,
	initialState,
}: Readonly<{
	children: ReactNode;
	initialState: any;
}>) {
	return (
		<html lang='en'>
			<body
				className={`${geistSans.variable} ${geistMono.variable} ${merriweather.variable} antialiased`}
			>
				<ContextProvider>
					<SessionProvider>
						<ThemeProvider
							attribute='class'
							defaultTheme='system'
							enableSystem
							disableTransitionOnChange
						>
							{children}
						</ThemeProvider>
					</SessionProvider>
				</ContextProvider>
			</body>
		</html>
	);
}
